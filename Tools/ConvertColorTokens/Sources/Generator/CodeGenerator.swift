//
//  CodeGenerator.swift
//  ConvertColorTokens
//
//  Created by LCH on 10/24/25.
//

import Foundation

struct CodeGenerator {
  func generate(from colorDict: [String: Any]) -> String {
    let indent = "  "
    let indent2 = indent + indent
    let dateString = DateFormatter.krDateFormatter.string(from: Date())
    
    var result = """
    // Generated by ConvertDesignTokens on \(dateString)
    // DO NOT EDIT MANUALLY
    
    import UIKit
    
    extension UIColor {
    """
    
    for (category, values) in colorDict.sorted(by: { $0.key < $1.key }) {
      guard let group = values as? [String: Any] else { continue }
      
      result += "\n\(indent)enum \(category.camelCase().capitalizedFirstLetter()) {\n"
      var isFirst = true
      
      for (colorName, colorData) in group.sorted(by: { $0.key < $1.key }) {
        guard let info = colorData as? [String: Any],let hex = info[DesignTokenKey.value.rawValue] as? String else { continue }
        
        if let desc = info[DesignTokenKey.description.rawValue] as? String, !desc.isEmpty {
          result += "\(isFirst ? "" : "\n")\(indent2)/// \(desc)\n"
          isFirst = false
        }
        result += "\(indent2)static let \(colorName.camelCase()) = UIColor(hex: \"\(hex.uppercased())\")\n"
      }
      result += "\(indent)}\n"
    }
    
    result += "}\n"
    return result
  }
}
